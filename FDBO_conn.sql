-- 1. Orașe
CREATE TABLE cities (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  city_name VARCHAR2(100) NOT NULL,
  state VARCHAR2(50) NOT NULL,
  zip_code VARCHAR2(10),
  UNIQUE (city_name, state)
);

-- 2. Proprietari
CREATE TABLE owners (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  full_name VARCHAR2(100) NOT NULL,
  email VARCHAR2(100),
  phone VARCHAR2(20),
  created_at DATE DEFAULT SYSDATE
);

-- 3. Tipuri de proprietăți
CREATE TABLE property_types (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  type_name VARCHAR2(50) NOT NULL CHECK (type_name IN ('House', 'Apartment', 'Condo', 'Villa')),
  description VARCHAR2(200)
);

-- 4. Proprietăți imobiliare
CREATE TABLE real_estate (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  price NUMBER(10,2) NOT NULL CHECK (price > 0),
  beds NUMBER(2) CHECK (beds >= 0),
  baths NUMBER(2) CHECK (baths >= 0),
  house_size NUMBER(6) CHECK (house_size > 0),
  listed_date DATE DEFAULT SYSDATE,
  is_available CHAR(1) DEFAULT 'Y' CHECK (is_available IN ('Y', 'N')),
  city_id NUMBER NOT NULL,
  property_type_id NUMBER NOT NULL,
  owner_id NUMBER NOT NULL,
  FOREIGN KEY (city_id) REFERENCES cities(id),
  FOREIGN KEY (property_type_id) REFERENCES property_types(id),
  FOREIGN KEY (owner_id) REFERENCES owners(id)
);


INSERT INTO cities (city_name, state, zip_code) VALUES ('Austin', 'TX', '73301');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Miami', 'FL', '33101');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Chicago', 'IL', '60601');
INSERT INTO cities (city_name, state, zip_code) VALUES ('New York', 'NY', '10001');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Los Angeles', 'CA', '90001');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Houston', 'TX', '77001');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Dallas', 'TX', '75201');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Phoenix', 'AZ', '85001');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Seattle', 'WA', '98101');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Denver', 'CO', '80201');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Atlanta', 'GA', '30301');
INSERT INTO cities (city_name, state, zip_code) VALUES ('San Diego', 'CA', '92101');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Boston', 'MA', '02101');
INSERT INTO cities (city_name, state, zip_code) VALUES ('Orlando', 'FL', '32801');



INSERT INTO owners (full_name, email, phone) VALUES ('Owner 1', 'owner1@example.com', '0710000001');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 2', 'owner2@example.com', '0710000002');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 3', 'owner3@example.com', '0710000003');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 4', 'owner4@example.com', '0710000004');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 5', 'owner5@example.com', '0710000005');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 6', 'owner6@example.com', '0710000006');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 7', 'owner7@example.com', '0710000007');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 8', 'owner8@example.com', '0710000008');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 9', 'owner9@example.com', '0710000009');
INSERT INTO owners (full_name, email, phone) VALUES ('Owner 10', 'owner10@example.com', '0710000010');


INSERT INTO property_types (type_name, description) VALUES ('House', 'Description for House');
INSERT INTO property_types (type_name, description) VALUES ('Apartment', 'Description for Apartment');
INSERT INTO property_types (type_name, description) VALUES ('Condo', 'Description for Condo');
INSERT INTO property_types (type_name, description) VALUES ('Villa', 'Description for Villa');
INSERT INTO property_types (type_name, description) VALUES ('Studio', 'Description for Studio');
INSERT INTO property_types (type_name, description) VALUES ('Penthouse', 'Description for Penthouse');
INSERT INTO property_types (type_name, description) VALUES ('Mansion', 'Description for Mansion');
INSERT INTO property_types (type_name, description) VALUES ('Townhouse', 'Description for Townhouse');
INSERT INTO property_types (type_name, description) VALUES ('Duplex', 'Description for Duplex');
INSERT INTO property_types (type_name, description) VALUES ('Ranch', 'Description for Ranch');



INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (350000, 4, 3, 2500, TO_DATE('2023-10-01', 'YYYY-MM-DD'), 'Y', 1, 1, 1);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (400000, 5, 4, 3500, TO_DATE('2023-10-02', 'YYYY-MM-DD'), 'Y', 2, 2, 2);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (250000, 3, 2, 1800, TO_DATE('2023-09-15', 'YYYY-MM-DD'), 'N', 3, 3, 3);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (500000, 6, 5, 4500, TO_DATE('2023-11-05', 'YYYY-MM-DD'), 'Y', 4, 4, 4);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (600000, 7, 6, 6000, TO_DATE('2023-12-01', 'YYYY-MM-DD'), 'N', 5, 5, 5);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (450000, 4, 3, 3500, TO_DATE('2023-10-10', 'YYYY-MM-DD'), 'Y', 6, 1, 6);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (350000, 3, 2, 2500, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'Y', 7, 2, 7);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (500000, 5, 4, 4000, TO_DATE('2023-11-10', 'YYYY-MM-DD'), 'N', 8, 3, 8);

INSERT INTO real_estate (price, beds, baths, house_size, listed_date, is_available, city_id, property_type_id, owner_id) 
VALUES (350000, 4, 3, 3500, TO_DATE('2023-10-20', 'YYYY-MM-DD'), 'Y', 9, 4, 9);

DESCRIBE cities;
DESCRIBE property_types;
DESCRIBE real_estate;

SELECT * FROM cities;
SELECT * FROM property_types;
SELECT * FROM owners;

SELECT * FROM cities;
SELECT * FROM property_types;
SELECT * FROM owners;

SELECT * FROM cities;
SELECT * FROM property_types;

SELECT * FROM real_estate;

SELECT * FROM cities;
SELECT * FROM property_types;
SELECT * FROM owners;
SELECT * FROM real_estate;


-- 1. Prețul mediu al proprietăților pe orașe
SELECT city_name, AVG(price) AS avg_price
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
GROUP BY city_name
ORDER BY avg_price DESC;

-- 2. Numărul de camere pe tipuri de proprietăți
SELECT type_name, SUM(beds) AS total_beds
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
GROUP BY type_name
ORDER BY total_beds DESC;

-- 3. Numărul de proprietăți disponibile per oraș
SELECT city_name, COUNT(*) AS available_properties
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE is_available = 'Y'
GROUP BY city_name
ORDER BY available_properties DESC;

-- 4. Proprietăți mai scumpe decât media pe fiecare tip de proprietate
SELECT property_type_id, price, city_name
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE price > (
    SELECT AVG(price) 
    FROM real_estate 
    WHERE property_type_id = real_estate.property_type_id
)
ORDER BY price DESC;

-- 5. Proprietăți care au mai mult de 4 camere
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE beds > 4
ORDER BY price DESC;

-- 6. Proprietăți care au mai mult de 3 băi și sunt disponibile
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE baths > 3 AND is_available = 'Y'
ORDER BY price DESC;

-- 7. Proprietăți dintr-un anumit oraș cu un preț sub o limită dată
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE city_name = 'Austin' AND price < 400000
ORDER BY price DESC;

-- 8. Numărul total de proprietăți per tip de proprietate
SELECT type_name, COUNT(*) AS total_properties
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
GROUP BY type_name
ORDER BY total_properties DESC;

-- 9. Proprietăți care au o suprafață de locuit mai mare decât media pentru tipul lor
SELECT city_name, price, house_size, type_name
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
JOIN cities ON real_estate.city_id = cities.id
WHERE house_size > (
    SELECT AVG(house_size) 
    FROM real_estate 
    WHERE property_type_id = real_estate.property_type_id
)
ORDER BY house_size DESC;

-- 10. Proprietăți care sunt mai scumpe decât prețul mediu pe tip de proprietate și sunt disponibile pentru vânzare
SELECT pt.type_name, re.price, c.city_name, re.house_size
FROM real_estate re
JOIN cities c ON re.city_id = c.id
JOIN property_types pt ON re.property_type_id = pt.id
WHERE re.price > (
    SELECT AVG(price)
    FROM real_estate
    WHERE property_type_id = re.property_type_id
) AND re.is_available = 'Y'
ORDER BY re.price DESC;



-- Acordă permisiunea de a crea view-uri pentru FDBO
--GRANT CREATE VIEW TO FDBO;

-- Acordă permisiunea de SELECT pe tabelele din schema FDBO
GRANT SELECT ON FDBO.cities TO FDBO;
GRANT SELECT ON FDBO.property_types TO FDBO;
GRANT SELECT ON FDBO.real_estate TO FDBO;
GRANT SELECT ON FDBO.owners TO FDBO;

-- Creare view-uri

CREATE VIEW avg_price_per_city AS
SELECT city_name, AVG(price) AS avg_price
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
GROUP BY city_name
ORDER BY avg_price DESC;

CREATE VIEW total_beds_per_property_type AS
SELECT type_name, SUM(beds) AS total_beds
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
GROUP BY type_name
ORDER BY total_beds DESC;

CREATE VIEW available_properties_per_city AS
SELECT city_name, COUNT(*) AS available_properties
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE is_available = 'Y'
GROUP BY city_name
ORDER BY available_properties DESC;

CREATE VIEW expensive_properties_per_type AS
SELECT property_type_id, price, city_name
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE price > (
    SELECT AVG(price)
    FROM real_estate 
    WHERE property_type_id = real_estate.property_type_id
)
ORDER BY price DESC;

CREATE VIEW properties_with_more_than_4_beds AS
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE beds > 4
ORDER BY price DESC;

CREATE VIEW properties_with_more_than_3_baths AS
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE baths > 3 AND is_available = 'Y'
ORDER BY price DESC;

CREATE VIEW properties_in_city_under_price AS
SELECT city_name, price, beds, baths, house_size
FROM real_estate
JOIN cities ON real_estate.city_id = cities.id
WHERE city_name = 'Austin' AND price < 400000
ORDER BY price DESC;

CREATE VIEW total_properties_per_type AS
SELECT type_name, COUNT(*) AS total_properties
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
GROUP BY type_name
ORDER BY total_properties DESC;

CREATE VIEW properties_larger_than_avg_size AS
SELECT city_name, price, house_size, type_name
FROM real_estate
JOIN property_types ON real_estate.property_type_id = property_types.id
JOIN cities ON real_estate.city_id = cities.id
WHERE house_size > (
    SELECT AVG(house_size)
    FROM real_estate
    WHERE property_type_id = real_estate.property_type_id
)
ORDER BY house_size DESC;

CREATE VIEW expensive_and_available_properties AS
SELECT pt.type_name, re.price, c.city_name, re.house_size
FROM real_estate re
JOIN cities c ON re.city_id = c.id
JOIN property_types pt ON re.property_type_id = pt.id
WHERE re.price > (
    SELECT AVG(price)
    FROM real_estate
    WHERE property_type_id = re.property_type_id
) AND re.is_available = 'Y'
ORDER BY re.price DESC;
